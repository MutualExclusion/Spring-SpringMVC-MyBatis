<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.BbsDetailDao">
    <!-- BbsDetail的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_BbsDetail_Map" type="com.entity.BbsDetail">
        <id column="id" property="id" />
        <result column="amount" property="amount" />
        <result column="color" property="color" />
        <result column="size" property="size" />
        <result column="price" property="price" />
        <result column="product_id" property="productId" />
        <result column="order_id" property="orderId" />
        <result column="product_name" property="productName" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:bbs_detail的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="bbs_detail_Column">
        bbs_detail.id as id
        ,bbs_detail.amount as amount
        ,bbs_detail.color as color
        ,bbs_detail.size as size
        ,bbs_detail.price as price
        ,bbs_detail.product_id as product_id
        ,bbs_detail.order_id as order_id
        ,bbs_detail.product_name as product_name
    </sql>

    <!--获得类名为:BbsDetail对应的数据库表的数据总行数 -->
    <select id="getBbsDetailRowCount" parameterType="com.common.Assist" resultType="java.lang.Long">
        select count(id) from bbs_detail
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:BbsDetail对应数据库中表的数据集合 -->
    <select id="selectBbsDetail" parameterType="com.common.Assist"  resultMap="result_BbsDetail_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="bbs_detail_Column" /> 
            </otherwise>
        </choose>
        from bbs_detail
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM bbs_detail
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=bbs_detail.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个BbsDetail对象,以参数BbsDetail对象中不为空的属性作为条件进行查询-->
    <select id="selectBbsDetailByObj" parameterType="com.entity.BbsDetail" resultMap="result_BbsDetail_Map">
        select 
            <include refid="bbs_detail_Column" /> 
        from bbs_detail
        <where>
            <if test="productName != null "> and bbs_detail.product_name = #{productName}</if>
            <if test="orderId != null "> and bbs_detail.order_id = #{orderId}</if>
            <if test="productId != null "> and bbs_detail.product_id = #{productId}</if>
            <if test="price != null "> and bbs_detail.price = #{price}</if>
            <if test="size != null "> and bbs_detail.size = #{size}</if>
            <if test="color != null "> and bbs_detail.color = #{color}</if>
            <if test="amount != null "> and bbs_detail.amount = #{amount}</if>
            <if test="id != null "> and bbs_detail.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过BbsDetail的id获得对应数据库中表的数据对象-->
    <select id="selectBbsDetailById" parameterType="java.lang.Long" resultMap="result_BbsDetail_Map">
        select 
            <include refid="bbs_detail_Column" /> 
        from bbs_detail
        where bbs_detail.id = #{id}
    </select> 

    <!-- 将BbsDetail插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertBbsDetail" parameterType="com.entity.BbsDetail">
        insert into bbs_detail(id,amount,color,size,price,product_id,order_id,product_name) 
        values(#{id},#{amount},#{color},#{size},#{price},#{productId},#{orderId},#{productName})
    </insert>

    <!-- 将BbsDetail中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyBbsDetail" parameterType="com.entity.BbsDetail">
        insert into bbs_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="amount != null">amount,</if>
            <if test="color != null">color,</if>
            <if test="size != null">size,</if>
            <if test="price != null">price,</if>
            <if test="productId != null">product_id,</if>
            <if test="orderId != null">order_id,</if>
            <if test="productName != null">product_name,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="amount != null"> #{amount},</if>
            <if test="color != null"> #{color},</if>
            <if test="size != null"> #{size},</if>
            <if test="price != null"> #{price},</if>
            <if test="productId != null"> #{productId},</if>
            <if test="orderId != null"> #{orderId},</if>
            <if test="productName != null"> #{productName},</if>
        </trim>
    </insert>

    <!-- 将BbsDetail批量插入到对应数据库的表中-->
    <insert id="insertBbsDetailByBatch" parameterType="ArrayList">
        insert into bbs_detail(id,amount,color,size,price,product_id,order_id,product_name) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.amount},#{item.color},#{item.size},#{item.price},#{item.productId},#{item.orderId},#{item.productName})
        </foreach>
    </insert>

    <!-- 通过BbsDetail的id将数据库表中对应的数据删除-->
    <delete id="deleteBbsDetailById" parameterType="java.lang.Long">
        delete from bbs_detail
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将BbsDetail对应的数据库表的数据删除-->
    <delete id="deleteBbsDetail" parameterType="com.common.Assist">
        delete from bbs_detail
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过BbsDetail的id将BbsDetail的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateBbsDetailById" parameterType="com.entity.BbsDetail">
        update bbs_detail set
            amount=#{amount}
            ,color=#{color}
            ,size=#{size}
            ,price=#{price}
            ,product_id=#{productId}
            ,order_id=#{orderId}
            ,product_name=#{productName}
        where id=#{id}
    </update>

    <!-- 通过BbsDetail的id将BbsDetail中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyBbsDetailById" parameterType="com.entity.BbsDetail">
        update bbs_detail
        <set>
            <if test="amount != null">
                amount=#{amount},
            </if>
            <if test="color != null">
                color=#{color},
            </if>
            <if test="size != null">
                size=#{size},
            </if>
            <if test="price != null">
                price=#{price},
            </if>
            <if test="productId != null">
                product_id=#{productId},
            </if>
            <if test="orderId != null">
                order_id=#{orderId},
            </if>
            <if test="productName != null">
                product_name=#{productName},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将BbsDetail中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateBbsDetail" parameterType="map">
        update bbs_detail
        <set>
                id=#{enti.id},
                amount=#{enti.amount},
                color=#{enti.color},
                size=#{enti.size},
                price=#{enti.price},
                product_id=#{enti.productId},
                order_id=#{enti.orderId},
                product_name=#{enti.productName},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将BbsDetail中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyBbsDetail" parameterType="map">
        update bbs_detail
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.amount != null">
                amount=#{enti.amount},
            </if>
            <if test="enti.color != null">
                color=#{enti.color},
            </if>
            <if test="enti.size != null">
                size=#{enti.size},
            </if>
            <if test="enti.price != null">
                price=#{enti.price},
            </if>
            <if test="enti.productId != null">
                product_id=#{enti.productId},
            </if>
            <if test="enti.orderId != null">
                order_id=#{enti.orderId},
            </if>
            <if test="enti.productName != null">
                product_name=#{enti.productName},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>